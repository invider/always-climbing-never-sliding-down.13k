#!/bin/sh

SRC=./mod
DIST=./dist
STAGE=$DIST/stage
TAR=$DIST/targetX
TARY=$DIST/targetY
ZIP=liminal.zip
ZIPY=liminaly.zip

zipIt() {
    TARGET=$1
    ZIPPER=$2

    echo "============="
    echo "=    ZIP    ="
    echo "============="
    echo "Creating the archive from [$TARGET] => [$ZIPPER]"
    cd $TARGET
    pwd
    zip -r $ZIPPER *
    mv --verbose $ZIPPER ../
    cd -

    echo "---------------------------------"
    echo "Test unpackaging of [$ZIPPER]..."
    cd dist
    mkdir $ZIPPER.out
    unzip -v $ZIPPER            # show what is inside
    unzip $ZIPPER -d $ZIPPER.out   # unzip it
    cd -
}

echo "Indexing source files..."
./index

echo "Cleaning..."
./clean

echo "Screwing..."
./compile-s

echo "Staging the Package..."
mkdir -p $DIST
mkdir -p $STAGE
cp --verbose $SRC/*.css $STAGE/
cp --verbose $SRC/html/*.html $STAGE/

cp --verbose -r $SRC/dry   $STAGE/
cp --verbose -r $SRC/jet   $STAGE/
cp --verbose -r $SRC/stage $STAGE/

echo "Fixing the Package..."
cd $STAGE/jet
pwd
# fix the debug flag to 0
echo "Changing debug flag to 0..."
sed 's/const debug = 1/const debug = 0/' ./env.js > ./env._js
mv ./env._js ./env.js

# remove line comments from the shader file
echo "Removing comment lines from shaders..."
cat ./shader.js | sed 's://.*::' > ./shader._js
mv ./shader._js ./shader.js
cd -

# initial size estimates
#du -shb $STAGE/*.html
#du -shb $STAGE/js/*.js

# minify
echo "=============="
echo "=   Minify   ="
echo "=============="
mkdir -p $TAR
node ./tools/minify.js $STAGE $TAR

# just copy html fo now
# TODO minify .html and .css files
cp --verbose $STAGE/*.html $TAR
cp --verbose $STAGE/*.css $TAR


echo "=============="
echo "=    GULP    ="
echo "=============="
./node_modules/.bin/gulp
sleep 5

export SRC="./dist/stage/"
./index

zipIt $TAR $ZIP
zipIt $TARY $ZIPY

echo '-------------------------------'
du -shb $DIST/*.zip
du -sh --apparent-size $DIST/*.zip
echo '-------------------------------'

